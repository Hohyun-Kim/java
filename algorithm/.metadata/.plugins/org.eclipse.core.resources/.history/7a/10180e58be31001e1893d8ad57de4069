package deliciousFoodMadeByDoyoung_2961;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	
	public static void find_best_taste(int[] sour, int[] bit, boolean[] is_used, int sour_pi, int bit_sum, int[] delicious, int check, int cnt, int total) {
		
		int flavor = Math.abs(sour_pi - bit_sum);
		
		if (delicious[0] > flavor && check>0) {
			delicious[0] = flavor;
		}
		
		if (check == total) {
			return;
		}
		
		is_used[cnt] = true;
		find_best_taste(sour, bit, is_used, sour_pi*sour[cnt], bit_sum+bit[cnt], delicious, cnt+1, total);
		is_used[cnt] = false;
		find_best_taste(sour, bit, is_used, sour_pi, bit_sum, delicious, cnt+1, total);
		
	}

	public static void main(String[] args) throws NumberFormatException, IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuffer sb = new StringBuffer();
		int total = Integer.parseInt(br.readLine());
		int[] sour = new int[total];
		int[] bit = new int[total];
		boolean[] is_used = new boolean[total];
		int sour_pi = 1;
		int bit_sum = 0;
		int[] delicious = {0};
		int check = 0;
		int cnt = 0;
		for (int i = 0; i < total; i++) {
			st = new StringTokenizer(br.readLine());
			sour[i] = Integer.parseInt(st.nextToken());
			bit[i] = Integer.parseInt(st.nextToken());
		}
		find_best_taste(sour, bit, is_used, sour_pi, bit_sum, delicious, check, cnt, total);
		System.out.println(delicious[0]);
		
	}

}
